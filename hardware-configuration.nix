# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ 
      # ./secureboot.nix
      #(builtins.getFlake "path:/etc/nixos/secureboot.nix").packages.x86_64-linux.default
      (modulesPath + "/installer/scan/not-detected.nix")
    ];


  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/e3a476ab-da9a-4cd1-8f5e-50ff4b1a62fb";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-7221c2eb-3286-480a-a59f-7b2b23be4297".device = "/dev/disk/by-uuid/7221c2eb-3286-480a-a59f-7b2b23be4297";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/913C-7F9B";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/03f64137-d231-4d53-a35b-d175b9ab20f2"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.interfaces.enp4s0.wakeOnLan = { 
    enable = true;
  };

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  programs.steam.enable = true;
}
